[project]
name = "modelconv"
description = "Converter for neural models into various formats."
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Luxonis", email = "support@luxonis.com" }]
maintainers = [{ name = "Luxonis", email = "support@luxonis.com" }]
keywords = ["ml", "onnx", "openvino", "nn", "ai", "embedded"]
dynamic = ["dependencies", "optional-dependencies", "version"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Scientific/Engineering :: Image Recognition",
]

[project.scripts]
modelconverter = "modelconverter.__main__:app.meta"

[project.urls]
repository = "https://github.com/luxonis/modelconverter"
issues = "https://github.com/luxonis/modelconverter/issues"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }
version = { attr = "modelconverter.__version__" }

[tool.setuptools.dynamic.optional-dependencies]
bench = { file = ["requirements-bench.txt"] }
analysis = { file = ["requirements-analysis.txt"] }
dev = { file = ["requirements-dev.txt", "requirements-bench.txt"] }
rvc2 = { file = ["modelconverter/packages/rvc2/requirements.txt"] }
rvc3 = { file = ["modelconverter/packages/rvc3/requirements.txt"] }
rvc4 = { file = ["modelconverter/packages/rvc4/requirements.txt"] }
hailo = { file = ["modelconverter/packages/hailo/requirements.txt"] }


[tool.ruff]
target-version = "py310"
line-length = 79
indent-width = 4

[tool.ruff.lint]
select = [
  "ANN",
  "B",
  "C4",
  "DTZ",
  "E",
  "ERA",
  "F",
  "FLY",
  "FURB",
  "I",
  "ICN",
  "ICN",
  "INP",
  "INT",
  "ISC",
  "NPY",
  "PERF101",
  "PERF102",
  "PERF402",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  "Q",
  "RET",
  "RSE",
  "RUF",
  "S",
  "SIM",
  "T10",
  "T20",
  "TID",
  "TRY",
  "UP",
  "W",
]
ignore = [
  "ANN002",
  "ANN003",
  "ANN204",
  "ANN401",
  "D1",
  "DTZ007",
  "E501",
  "F403",
  "ICN002",
  "NPY002",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  "PLW2901",
  "PTH123",
  "RET503",
  "RUF012",
  "S101",
  "S311",
  "S603",
  "S606",
  "S607",
  "SIM108",
  "PT011",
  "TRY003",
  "TRY301",
  "W191",
]
unfixable = ["B905", "PLC0208"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN201"]
"__main__.py" = ["ANN201"]

[tool.docformatter]
black = true
style = "epytext"
wrap-summaries = 72
wrap-descriptions = 72

[tool.pyright]
typeCheckingMode = "basic"
