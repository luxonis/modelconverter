name: Integration tests for ModelConverter

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
        description: Which package to test

      version:
        required: true
        type: string
        description: >
          Which version of underlying conversion tools to use

permissions:
  contents: read
  packages: read

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_ENDPOINT_URL: ${{ secrets.AWS_S3_ENDPOINT_URL }}
  PACKAGE: ${{ inputs.package }}
  VERSION: ${{ inputs.version }}

jobs:
  tests:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: crazy-max/ghaction-setup-docker@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        cache: pip

    - name: Install dependencies
      run: pip install -e .[dev] --extra-index-url https://artifacts.luxonis.com/artifactory/luxonis-python-release-local/

    - name: Authenticate to Google Cloud
      id: google-auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        token_format: access_token

    - name: Prepare build dependencies
      env:
        GS_BUILD_ARTIFACTS: gs://luxonis-test-bucket/modelconverter/build-artifacts
      run: |
        mkdir -p docker/extra_packages
        if [ "${PACKAGE}" = "rvc4" ]; then
            gcloud storage cp                             \
              "${GS_BUILD_ARTIFACTS}/snpe-${VERSION}.zip" \
              "docker/extra_packages/snpe-${VERSION}.zip"
        elif [ "${PACKAGE}" = "rvc2" ] || [ "${PACKAGE}" = "rvc3" ]; then
            gcloud storage cp                                    \
              "${GS_BUILD_ARTIFACTS}/openvino-${VERSION}.tar.gz" \
              "docker/extra_packages/openvino-${VERSION}.tar.gz"
        elif [ "${PACKAGE}" = "hailo" ]; then
            mv docker/hailo/Dockerfile.internal docker/hailo/Dockerfile
        fi

    - name: Run Tests
      run: |
        pytest -x "tests/test_packages/test_${PACKAGE}.py" --tool-version "${VERSION}"
