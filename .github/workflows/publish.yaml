name: Package publishing

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
        description: Which package to publish

      version:
        required: true
        type: string
        description: >
          Which version of underlying conversion tools to use

permissions:
  contents: read
  packages: write

env:
  GAR_LOCATION: us-central1
  DOCKERFILE: docker/${{ inputs.package }}/Dockerfile
  PACKAGE: ${{ inputs.package }}
  NAME: luxonis/modelconverter-${{ inputs.package }}
  STEM: modelconverter-${{ inputs.package }}
  VERSION: ${{ inputs.version }}
  GAR_STEM: us-central1-docker.pkg.dev/easyml-394818

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      LOCAL_NAME: luxonis/modelconverter-${{ inputs.package }}:${{ inputs.version }}-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: google-auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        token_format: access_token

    - name: Docker login to GAR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.google-auth.outputs.access_token }}

    - name: Docker login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Download build files from GCS
      if: ${{ inputs.package }} != hailo
      env:
        GS_BUILD_ARTIFACTS: gs://luxonis-test-bucket/modelconverter/build-artifacts
      run: |
        mkdir -p docker/extra_packages
        cd docker/extra_packages
        if [ "${PACKAGE}" = "rvc4" ]; then
            gcloud storage cp                             \
              "${GS_BUILD_ARTIFACTS}/snpe-${VERSION}.zip" \
              "snpe-${VERSION}.zip"
        elif [ "${PACKAGE}" = "rvc2" ] || [ "${PACKAGE}" = "rvc3" ]; then
            gcloud storage cp                                    \
              "${GS_BUILD_ARTIFACTS}/openvino-${VERSION}.tar.gz" \
              "openvino-${VERSION}.tar.gz"
        fi

    - name: Build image
      run: |
        docker build -f "${DOCKERFILE}" -t "${LOCAL_NAME}" . --build-arg VERSION="${VERSION}"

    - name: GHCR publish latest
      run: |
        GHCR_NAME="ghcr.io/${LOCAL_NAME}"
        docker tag "${LOCAL_NAME}" "${GHCR_NAME}"
        docker push "${GHCR_NAME}"

    - name: GHCR publish SHA
      run: |
        SHA=$(git rev-parse --short HEAD)
        GHCR_NAME="ghcr.io/${NAME}:${VERSION}-${SHA}"
        docker tag "${LOCAL_NAME}" "${GHCR_NAME}"
        docker push "${GHCR_NAME}"

    - name: GAR publish latest
      run: |
        GAR_NAME="${GAR_STEM}/internal/${STEM}:${VERSION}-latest"
        docker tag "${LOCAL_NAME}" "${GAR_NAME}"
        docker push "${GAR_NAME}"

    - name: GAR publish SHA
      run: |
        SHA=$(git rev-parse --short HEAD)
        GAR_NAME="${GAR_STEM}/internal/${STEM}:${VERSION}-${SHA}"
        docker tag "${LOCAL_NAME}" "${GAR_NAME}"
        docker push "${GAR_NAME}"

    - name: GAR publish clients
      run: |
        read -r -a REPO_ARRAY <<< "${{ vars.EXTERNAL_CLIENTS }}"

        for REPO in "${REPO_ARRAY[@]}"; do
          GAR_CLIENT_NAME="${GAR_STEM}/${REPO}/${STEM}:${VERSION}-${SHA}"
          docker tag "${LOCAL_NAME}" "${GAR_CLIENT_NAME}"
          docker push "${GAR_CLIENT_NAME}"
        done
